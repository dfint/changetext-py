import sys
import re
import traceback

try:
    from tests import test_strings
except ImportError:
    print("Failed to import tests. Skipping.")
    test_strings = None

phrases = {
    'Slaves to Armok:  God of Blood':'Рабы Армока - бога крови',
    'Chapter II: Dwarf Fortress':'Глава II: Крепость дварфов',
    'Жмите ':'Нажмите ',
    'прокрутка':'для прокрутки',
    'Programmed by Tarn Adams':'Программирование - Тарн Адамс',
    'Designed by Tarn and Zach Adams':'Дизайн - Тарн Адамс и Зак Адамс',
    'Visit Bay 12 Games':'Посетите Bay 12 Games',
    
    'Welcome to the alpha of Dwarf Fortress.':
        'Добро пожаловать в альфа-версию Dwarf Fortress.',
    'As there has been some time between releases, instability is to be expected.':
        'Поскольку между релизами прошло некоторое время, возможна нестабильность.',
    'Report crashes, hangs, lags, bugs and general disappointment at the forums.':
        'Сообщайте о вылетах, зависаниях, тормозах, багах и прочем на форумах',
    'They are at our website, bay12games.com.  Check there for updates.':
        'на нашем вебсайте bay12games.com.  Следите за обновлениями.',
    'You can also find an older yet more stable version of the game there.':
        'Там же вы можете найти более старые и стабильные версии игры.',
    'As of June 2012, you can get help at the fan-created dwarffortresswiki.org.':
        'Кроме того, вы можете получить помощь на dwarffortresswiki.org.',
    'Please make use of and contribute to this valuable resource.':
        'Пожалуйста, пользуйтесь и вносите свой вклад в этот ценный ресурс.',
    'If you enjoy the game, please consider supporting Bay 12 Games.':
        'Если игра вам понравилась, подумайте над тем, чтобы поддержать Bay 12 Games.',
    'There is more information at our web site and in the readme file.':
        'Дополнительную информацию вы можете получить на нашем веб сайте и в файле readme.',
        
    'Dwarf Fortress':'Крепость дварфов',
    'Adventurer':'Приключение',
    'Legends':'Легенды',
    'Пова':'Готовить', 
    'Вари':'Пиво',
    
    'Кучка ил':'Кучка ила',
    'Пыль ил':'Остатки ила',
    'из самородного алюминия':'самородный алюминий',
    'из необработанного адаманита':'необработанный адаманит',
    'повозка дерево':'дерево повозки',
    'из гипса':'гипс',
    'колония муравьи':'Колония муравьёв',
    'бирюзового цвета грубый кость':'Грубая кость бирюзового цвета',
    'бирюзового цвета грубый кожа':'Грубая кожа бирюзового цвета',
    'кожа кожа доспехи':'доспехи из кожи',
    'Ничего не ловится в центре  болотах.':'Ничего не ловится в центральных болотах.',
    'Ничего не ловится в востоке болотах.':'Ничего не ловится в восточных болотах.',
    
# элементы рельефа и тп
    'Куча снег':'Куча снега',
    'Пыль снег':'Снежная пыль',

# мастерская каменщика
    'Изготовить камень дверь':'Делать каменную дверь',
    'Изготовить камень блоки':'Делать каменные блоки',
    'Изготовить камень доспешная стойка':'Делать каменную доспешную стойку',
    'Изготовить камень трон':'Делать каменный трон',
    'Изготовить камень гроб':'Делать каменный гроб',
    'Изготовить камень люк':'Делать каменный люк',
    'Изготовить камень решетку':'Делать каменную решетку',
    'Изготовить камень шкаф':'Делать каменный шкаф',
    'Изготовить камень ларец':'Делать каменный ларец',
    'Изготовить камень шлюз':'Делать каменный шлюз',
    'Изготовить камень статуя':'Делать каменную статую',
    'Изготовить камень мемориал':'Делать каменный мемориал',
    'Изготовить камень стол':'Делать каменный стол',
    'Изготовить камень оружейная стойка':'Делать каменную оружейную стойку',
    'Изготовить камень ручную мельницу':'Делать каменную ручную мельницу',
    'Изготовить камень жернов':'Делать каменный жернов',

# мастерская столяра
    'Делать деревянный тренировочное копьё':'Делать деревянное тренировочное копьё',
    'Делать деревянный тренировочный меч':'Делать деревянный тренировочный меч',
    'Делать деревянный тренировочный топор':'Делать деревянный тренировочный топор',
    'Делать деревянный бочка':'Делать деревянную бочку',
    'Изготовить деревянный блоки':'Делать деревянные блоки',
    'Делать деревянный ведро':'Делать деревянное ведро',
    'Делать деревянный ловушка для животных':'Делать деревянную ловушку для животных',
    'Делать деревянный клетка':'Делать деревянную клетку',
    'Изготовить деревянный доспешная стойка':'Изготовить деревянную доспешную стойку',
    'Изготовить деревянный кровать':'Делать деревянную кровать',
    'Изготовить деревянный дверь':'Делать деревянную дверь',
    'Изготовить деревянный Решетка':'Делать деревянную решетку',
    'Изготовить деревянный оружейная стойка':'Делать деревянную оружейную стойку',
    'Делать деревянный вагонетка':'Делать деревянную вагонетку',
    'Делать деревянный тачка':'Делать деревянную тачку',
    'Делать деревянный Секция трубы':'Делать деревянную секцию трубы',
    'Изготовить деревянный шина':'Делать деревянную шину',
    'Изготовить деревянный Костыль':'Делать деревянный костыль',
    'Изготовить Кровать':'Изготовить кровать',
# мастерская ремесленника
    'Ремесленник мастерская':'Мастерская ремесленника',
    'Украшать панцирь':'Украшать панцирь',
    'Украшать кость':'Украшать кость',
    'Делать камень изделия':'Делать изделия из камня',
    'Делать камень кружку':'Делать каменную кружку',
    'Делать камень инструмент':'Делать каменный инструмент',
    'Делать камень короткий меч':'Делать каменный короткий меч',
    'Делать камень гнездо':'Делать каменное гнездо',
    'Делать камень кувшин':'Делать каменный кувшин',
    'Делать камень горшок':'Делать каменный горшок',
    'Делать камень улей':'Делать каменный улей',
    'Делать камень игрушку':'Делать каменную игрушку',
    'Делать деревянный изделия':'Делать изделия из дерева',
    'Делать деревянный болты':'Делать деревянные болты',
    'Делать деревянный гнездо':'Делать деревянное гнездо',
    'Делать деревянный кувшин':'Делать деревянный кувшин',
    'Делать кость болты':'Делать болты из кости',
    'Делать кость изделия':'Делать изделия из кости',
    'Делать кость рейтузы':'Делать рейтузы из кости',
    'Делать кость поножи':'Делать поножи из кости',
    'Делать кость рукавица':'Делать рукавицу из кости',
    'Делать кость шлем':'Делать шлем из кости',
    'Делать панцирь рейтузы':'Делать рейтузы из панциря',
    'Делать панцирь рукавица':'Делать рукавицу из панциря',
    'Делать панцирь шлем':'Делать шлем из панциря',
    'Украшать слоновая кость/зуб':'Украшать слоновую кость/зуб',
    'Делать ткань изделия':'Делать изделия из ткани',
    'Делать шёлк изделия ':'Делать изделия из шелка',
    'Делать пряжа изделия':'Делать изделия из пряжи',
    'Делать слоновая кость/зуб изделия':'Делать изделия из слоновой кости/зуба',
    'Делать рог изделия':'Делать изделия из рога',
    'Делать жемчуг изделия':'Делать изделия из жемчуга',
    'Делать кожа изделия':'Делать изделия из кожи',
    'Делать панцирь изделия':'Делать изделия из панциря',
    
# мастерская лучника
    'Делать кость арбалет':'Делать арбалет из кости',
    
# требуется*
    'Требуется блоки':'Требуются блоки',
    'Требуется без щёлок/молоко ведро':'Требуется без щёлока/молока ведро',
    'Требуется пустой бочка':'Требуется пустая бочка',
    
# Выполняется...
    'Выполняется в Дубильня':'Выполняется в дубильне',
    'Выполняется в  Мастерская мыловара':'Выполняется в мастерской мыловара',
    'Выполняется в ремесленник мастерская':'Выполняется в мастерской ремесленника', 
    'Выполняется в  Печь для обжига или Магменная печь':'Выполняется в печи для обжига или магменной печи',
    'Выполняется в  Плавильня или Магменная плавильня':'Выполняется в плавильне или магменной плавильне',
    'Выполняется в  Винтовой пресс':'Выполняется в винтовом прессе',
    'Выполняется в  Жернов или Ручная мельница':'Выполняется в  жернове или в ручная мельнице',
# осадная мастерская
    'Изготовить Части баллисты':'Изготовить части балисты',
    'Собрать из железа стрела баллисты':'Собрать железную стрелу баллисты',
    'Собрать из серебра стрела баллисты':'Собрать серебрянную стрелу баллисты',
    'Собрать из меди стрела баллисты':'Собрать медную стрелу баллисты',
    'Собрать из бронзы стрела баллисты':'Собрать бронзовую стрелу баллисты',
    'Собрать из стали стрела баллисты':'Собрать стальную стрелу баллисты',
    'Собрать из висмутовой бронзы стрела баллисты':'Собрать стрелу баллисты из висмутовой бронзы',
    'Собрать из адаманита стрела баллисты':'Собрать адаманитовую стрелу баллисты',
    'Собрать деревянную стрела баллисты':'Собрать деревянную стрелу баллисты',

# ювелирная мастерская
    'Огранить из необработанного адамантина': 'Огранить необработанный адамантин',
    'Инкрустировать Готовые товары с из необработанного адамантина': 'Инкрустировать готовые товары необработанным адамантином',
    'Инкрустировать Предметы обстановки с из необработанного адамантина': 'Инкрустировать предметы обстановки необработанным адамантином',
    'Инкрустировать Снаряды с из необработанного адамантина': 'Инкрустировать снаряды необработанным адамантином',
    'Инкрустировать Готовые товары с каменная соль': 'Инкрустировать готовые товары каменной солью',
    'Инкрустировать Предметы обстановки с каменная соль': 'Инкрустировать предметы обстановки каменной солью',
    'Инкрустировать Снаряды с каменная соль': 'Инкрустировать снаряды каменной солью',
    'Инкрустировать Готовые товары с габбро': 'Инкрустировать готовые товары габбро',
    'Инкрустировать Предметы обстановки с габбро': 'Инкрустировать предметы обстановки габбро',
    'Инкрустировать Снаряды с габбро': 'Инкрустировать снаряды габбро',
    'Огранить из самородного алюминия': 'Огранить из самородный алюминий',
    'Инкрустировать Готовые товары с из самородной платины': 'Инкрустировать готовые товары самородной платиной',
    'Инкрустировать Предметы обстановки с из самородной платины': 'Инкрустировать предметы обстановки самородной платиной',
    'Инкрустировать Снаряды с из самородной платины': 'Инкрустировать снаряды самородной платиной',
    'Огранить из самородного серебра': 'Огранить самородное серебро',
    'Инкрустировать Готовые товары с из самородной меди': 'Инкрустировать готовые товары самородной медью',
    'Инкрустировать Предметы обстановки с из самородной меди': 'Инкрустировать предметы обстановки самородной медью',
    'Инкрустировать Снаряды с из самородной меди': 'Инкрустировать снаряды самородной медью',
    'Инкрустировать Готовые товары с из оловянной глазури': 'Инкрустировать готовые товары оловянной глазурью',
    'Инкрустировать Готовые товары с из каменной керамики': 'Инкрустировать готовые товары каменной керамикой',
    'Инкрустировать Предметы обстановки с из каменной керамики': 'Инкрустировать предметы обстановки каменной керамикой',
    'Инкрустировать Снаряды с из каменной керамики': 'Инкрустировать снаряды каменной керамикой',
    'Огранить из фарфора': 'Огранить фарфор',
    'Инкрустировать Готовые товары с из пепельной глазури': 'Инкрустировать готовые товары пепельной глазурью',
    'Инкрустировать Предметы обстановки с из пепельной глазури': 'Инкрустировать предметы обстановки пепельной глазурью',
    'Инкрустировать Снаряды с из пепельной глазури': 'Инкрустировать снаряды пепельной глазурью',
    'Инкрустировать Предметы обстановки с из оловянной глазури': 'Инкрустировать предметы обстановки оловянной глазурью',
    'Инкрустировать Снаряды с из оловянной глазури': 'Инкрустировать снаряды с из оловянной глазурью',


#ручная мельница
    'свежий PRESS_LIQUID_MAT-образующий семена':'Свежие семена',
    
# кожевня
    'Делать кожа доспех':'Делать кожаный доспех',
    'Делать кожа роба':'Делать кожаную роба',
    'Делать кожа одежда':'Делать кожаную одежду',
    'Делать кожа рубаха':'Делать кожаную рубаху',
    'Делать кожа мундир':'Делать кожаный мундир',
    'Делать кожа жилет':'Делать кожаный жилет',
    'Делать кожа плащ':'Делать кожаный плащ',
    'Делать кожа рейтузы':'Делать кожаные рейтузы',
    'Делать кожа штаны':'Делать кожаные штаны',
    'Делать кожа шлем':'Делать кожаный шлем',
    'Делать кожа шапка':'Делать кожаную шапку',
    'Делать кожа капюшон':'Делать кожаный капюшон',
    'Делать кожа перчатка':'Делать кожаную перчатку',
    'Делать кожа варежка':'Делать кожаную варежку',
    'Делать кожа сапог':'Делать кожаный сапог',
    'Делать кожа ботинок':'Делать кожаный ботинок',
    'Делать кожа башмак':'Делать кожаный башмак',
    'Делать кожа щит':'Делать кожаный щит',
    'Делать кожа баклер':'Делать кожаный баклер',
    'Изготовить кожа мешок':'Изготовить кожаный мешок',
    'Делать кожа бурдюк':'Делать кожаный бурдюк',
    'Делать кожа рюкзак':'Делать кожаный рюкзак',
    'Делать кожа колчан':'Делать кожаный колчан',
    'Вышивать кожа изображение':'Вышивать изображение на коже',

# осадная мастерская
    'Собирать из железа стрела баллисты':'Собирать железную стрелу баллисты',
    'Собирать из серебра стрела баллисты':'Собирать серебряную стрелу баллисты',
    'Собирать из меди стрела баллисты':'Собирать медную стрелу баллисты',
    'Собирать из бронзы стрела баллисты':'Собирать бронзовую стрелу баллисты',
    'Собирать из стали стрела баллисты':'Собирать стальную стрелу баллисты',
    'Собирать из висмутовой бронзы стрела баллисты':'Собирать стрелу баллисты из висмутовой бронзы',
    'Собирать из адамантина стрела баллисты':'Собирать адамантиновую стрелу баллисты',
    'Собирать деревянный стрела баллисты':'Собирать деревянную стрелу баллисты',
    
# плавильня
    'Плавка из магнетита Руда':'Плавить магнетитовую руду',
    'Плавка из самородного алюминия Руда':'Плавить руду самородного алюминия',
    'Плавка из красного железняка Руда':'Плавить руду красного железняка',
    'Плавка из бурого железняка Руда':'Плавить руду бурого железняка',
    'Плавка из гарниерита Руда':'Плавить гарниеритовую руду',
    'Плавка из самородного золота Руда':'Плавить руду самородного золота',
    'Плавка из самородного серебра Руда':'Плавить руду самородного серебра',
    'Плавка из самородной меди Руда':'Плавить руду самородной меди',
    'Плавка из малахита Руда':'Плавить малахитовую руду',
    'Плавка из галенита Руда':'Плавить галенитовую руду',
    'Плавка из сфалерита Руда':'Плавить сфалеритовую руду',
    'Плавка из касситерита Руда':'Плавить касситеритовую руду',
    'Плавка из самородной платины Руда':'Плавить руду самородной платины',
    'Плавка из тетраэдрита Руда':'Плавить тетраэдритовую руду',
    'Плавка из рогового серебра Руда':'Плавить руду рогового серебра',
    'Плавка из висмутина Руда':'Плавить висмутиновую руду',
    
# Печь для обжига
    'Глазировать большой глиной/каменный горшок':'Глазировать большой глиняный/каменный горшок',
    
# Винтовой пресс
    'неотжатый PRESS_LIQUID_MAT-образующий жир':'Неотжатый, жиросодержащий материал',
    'PRESS_LIQUID_MAT жидкость':'Жидкость',
    'жир, Прессованый':'Пресованный жир',
    'неотжатый HONEYCOMB_PRESS_MAT-образующий сота':'Неотжатая медовая сота',
    'HONEYCOMB_PRESS_MAT жидкость':'Мед',

# Лавка портного
    'Ткать шёлк':'Ткать шёлк',
    'Вышивать ткань изображение':'Вышивать изображение на ткани',
    'Вышивать шёлк изображение':'Вышивать изображение на шёлке',
    'Вышивать пряжа изображение':'Вязать изображение из пряжи',
    
# Кузница
    'Ковать гигантский из железа лезвие топора':'Ковать гигантское железное лезвие топора',
    'Ковать огромный из железа винт':'Ковать огромный железный винт',
    'Ковать шипованный из железа шар':'Ковать железный шированный шар',
    'Ковать большой, зазубренный из железа диск':'Ковать большой железный зазубренный  диск',
    'Ковать заточенный из железа кол':'Ковать железный заточенный кол', 
    
    'Ковать гигантский из серебра лезвие топора':'Ковать гигантское серебрянное лезвие топора',
    'Ковать огромный из серебра винт':'Ковать огромный серебрянный винт',
    'Ковать шипованный из серебра шар':'Ковать шипованный серебрянный шар',
    'Ковать большой, зазубренный из серебра диск':'Ковать большой серебрянный зазубренный  диск',
    'Ковать заточенный из серебра кол':'Ковать заточенный серебрянный кол', 
    
    'Ковать гигантский из меди лезвие топора':'Ковать гигантское медное лезвие топора',
    'Ковать огромный из меди винт':'Ковать огромный медный винт',
    'Ковать шипованный из меди шар':'Ковать шипованный медный шар',
    'Ковать большой, зазубренный из меди диск':'Ковать большой медный зазубренный  диск',
    'Ковать заточенный из меди кол':'Ковать заточенный медный кол',

    'Ковать гигантский из бронзы лезвие топора':'Ковать гигантское бронзовое лезвие топора+',
    'Ковать огромный из бронзы винт':'Ковать огромный бронзовый винт',
    'Ковать шипованный из бронзы шар':'Ковать шипованный бронзовый шар',
    'Ковать большой, зазубренный из бронзы диск':'Ковать большой бронзовый зазубренный  диск',
    'Ковать заточенный из бронзы кол':'Ковать заточенный бронзовый кол', 
    
    'Ковать гигантский из стали лезвие топора':'Ковать гигантское стальное лезвие топора',
    'Ковать огромный из стали винт':'Ковать огромный стальной винт',
    'Ковать шипованный из стали шар':'Ковать шипованный стальной шар',
    'Ковать большой, зазубренный из стали диск':'Ковать большой стальной зазубренный  диск',
    'Ковать заточенный из стали кол':'Ковать заточенный стальной кол',
    
    'Ковать гигантский из висмутовой бронзы лезвие топора':'Ковать  гигантское лезвие топора из висмутовой бронзы ',
    'Ковать огромный из висмутовой бронзы винт':'Ковать огромный винт из висмутовой бронзы ',
    'Ковать шипованный из висмутовой бронзы шар':'Ковать шипованный шар из висмутовой бронзы ',
    'Ковать большой, зазубренный из висмутовой бронзы диск':'Ковать большой зазубренный  диск из висмутовой бронзы ',
    'Ковать заточенный из висмутовой бронзы кол':'Ковать заточенный кол из висмутовой бронзы',
    
    'Ковать гигантский из адаманита лезвие топора':'Ковать гигантское адаманитовое лезвие топора',
    'Ковать огромный из адаманита винт':'Ковать огромный адаманитовый винт',
    'Ковать шипованный из адаманита шар':'Ковать шипованный адаманитовый шар',
    'Ковать большой, зазубренный из адаманита диск':'Ковать большой адаманитовый зазубренный  диск',
    'Ковать заточенный из адаманита кол':'Ковать заточенный адаманитовый кол',
    'Требуется огнестойкий накова':'Требуется огнестойкая наковальня',
    'льня':' ',
    'Ковать из железа секцию трубы':'Ковать железную секцию трубы',
    'Ковать из железа наконечник стрелы баллисты':'Ковать железный наконечник баллисты',

#Разное
    'Ловить живую рыбу':'Ловить рыбу',
    'Разделывать живую рыбу':'Разделывать рыбу',
    
#Стекловареннная печь
    'Делать грубый зелёное стекло':'Варить грубое зелёное стекло',
    'Делать грубый прозрачное стекло':'Варить грубое прозрачное стекло',
    'Делать грубый хрусталь':'Варить грубый хрусталь',
    'Изготовить зелёное стекло доспешная стойка':'Изготовить доспешную стойку из зелёного стекла',
    'Изготовить прозрачное стекло доспешная стойка':'Изготовить доспешную стойку из прозрачного стекла',
    'Изготовить хрусталь доспешная стойка':'Изготовить доспешную стойку из хрусталя',
    'Изготовить зелёное стекло статуя':'Изготовить статую из зелёного стекла',
    'Изготовить прозрачное стекло статуя':'Изготовить статую из прозрачного стекла',
    'Изготовить хрусталь статуя':'Изготовить статую из хрусталя',
    'Изготовить зелёное стекло оружейная стойка':'Изготовить оружейную стойку из зелёного стекла',
    'Изготовить прозрачное стекло оружейная стойка':'Изготовить оружейную стойку из прозрачного стекла',
    'Изготовить хрусталь оружейная стойка':'Изготовить оружейную стойку из хрусталя',
    'Делать гигантский зелёное стекло лезвие топора':'Делать гигантское  лезвие топора из зелёного стекла',
    'Делать гигантский прозрачное стекло лезвие топора':'Делать гигантское лезвие топора из прозрачного стекла',
    'Делать гигантский хрусталь лезвие топора':'Делать гигантское лезвие топора из хрусталя',
    'Делать большой, зазубренный зелёное стекло диск':'Делать большой, зазубренный диск из зелёного стекла',
    'Делать большой, зазубренный прозрачное стекло диск':'Делать большой, зазубренный диск из прозрачного стекла',
    'Делать большой, зазубренный хрусталь диск':'Делать большой, зазубренный диск из хрусталя',

#животные
    'як бык, ♂':'як, ♂',
    'як корова, ♀':'як, ♀',
#корректировка выбора предметов
    'Верёвки (шёлк)':'Верёвки (шёлк)',
    'Нить (шёлк)':'Нить (шёлк)',
    'Мешки (шёлк)':'Мешки (шёлк)',   
    'Мешки (кожа)':'Мешки (кожа)',
#проблемы при высадке
# @todo: нет ... доступный - объединить в правило
    'Нет из меди кирки доступный':'Медные кирки недоступны',
    'Нет каменный уголь доступный':'Каменный уголь недоступен',
    'Нет из меди боевые топоры доступный':'Медные боевые топоры недоступны',
    'Нет из меди арбалеты доступный':'Медные арбалеты недоступны',
    'Нет из меди болты доступный':'Медные болты недоступны',
    'Нет рыба доступный':'Рыба недоступна',
    'Нет пещерный омар доступный':'Пещерный омар недоступен',
    'Нет приготовленные большая крыса сердца доступный':'Приготовленные сердца большой крысы недоступны',
    'Нет белый песок доступный':'Белый песок недоступен',
    'Нет жёлтый песок доступный':'Жёлтый песок недоступен',
#руда
    'Руда из серебра':'Серебрянная руда',
    'Руда из серебра (50%)':'Серебрянная руда (50%)',
    'Руда из цинка':'Цинковая руда',
    'Руда из железа':'Железная руда',
    'Руда из олова':'Оловянная руда',
    'Руда из платины':'Платиновая руда',
    'Руда из никеля':'Никелевая руда',
    'Руда из золота':'Золотая руда',
    'Руда из меди':'Медная руда',
    'Руда из свинца':'Свинцовая руда',
    'Руда из серебра (20%)':'Серебрянная руда (20%)',
    'Руда из висмута':'Висмутовая руда',
    'Руда из алюминия (50%)':'Алюминиевая руда (50%)',
#разное из меню "камень"
    'Извлечение из адамантина нити':'Извлечение нити из адамантина',
    'Глазировать глиной/каменные поделки':'Глазировать глиняные/каменные поделки',
    'Глазировать глиной/каменная статуя':'Глазировать глиняную/каменную статую',
    'Глазировать глиной/каменный кувшин':'Глазировать глиняный/каменный кувшин',
#реагенты
    'GIPSUM камни':'гипсовые камни',
    'FLUX камни':'камни-флюс',
    'GLAZE_MAT-образующий предмет':'глазуреобразующий материал',
    'GLAZE_MAT покрытие для глазурь':'глазирующее покрытие',
    'пустой необработанный CAN_GLAZE предмет':'пустой, необработанный предмет для газировки',
    'пустой необработанный CAN_GLAZE большой горшок':'пустой, необработанный большой горшок',
    'пустой необработанный CAN_GLAZE статуя':'необработанная статуя',
    'пустой необработанный CAN_GLAZE кувшин':'пустой, необработанный большой кувшин',
    'FIRED_MAT-образующий камни':'камни образующие обжигаемый материал',
    'FIRED_MAT улей':'Обожжённый улей',
    'FIRED_MAT Поделки':'Обожжённые поделки',
    'FIRED_MAT большой горшок':'Обожжённый большой горшок',
    'FIRED_MAT статуя':'Обожжённая статуя',
    'FIRED_MAT блоки':'Обожжённые блоки',
    'FIRED_MAT кувшин':'Обожжённый кувшин',
    'свежий TALLOW SOAP_MAT-образующий жир':'Свежий, мылообразующий жир',
    'SOAP_MAT слитки':'Слитки мыла',
    'свежий SOAP_MAT-образующий жидкость':'Свежая мылообразующая жидкость',
    'сырой рыба':'свежая рыба', 
}

############################################################################
# роды - значения не менять, т.к. используются как индексы
masculine = 0 # м. род
feminine = 1 # ж. род
neuter = 2 # ср. род
plural = 3 # мн. ч.

# падежи
nominative = 0 # именительный
genitive = 1 # родительный
dative = 2 # дательный
accusative = 3 # винительный
instrumental = 4 # творительный
prepositional = 5 # предложный

case_names = ["nominative","genitive","dative","accusative","instrumental","prepositional"]

gender_item = {
#предметы
# masculine
    "тренировочный топор":masculine, "щит":masculine, "баклер":masculine,
    "стол":masculine, "трон":masculine, "горшок":masculine, "шкаф":masculine,
    "ларец":masculine, "гроб":masculine, "игрушечный кораблик":masculine,
    "игрушечный молоток":masculine, "игрушечный топорик":masculine,
    "кубок":masculine,"костыль":masculine,"шлем":masculine,
    "капюшон":masculine,"сапог":masculine,"ботинок":masculine,"башмак":masculine,
    "песок":masculine,"кувшин":masculine,"барабан":masculine,"стул":masculine,
    "мешок":masculine,"боевой топор":masculine,"короткий меч":masculine,
    "тренировочный меч":masculine,"арбалет":masculine,"боевой молот":masculine,
    "амулет":masculine,"нагрудник":masculine,"инструмент":masculine,
    "улей":masculine,"рюкзак":masculine,"жилет":masculine,"плащ":masculine,"носок":masculine,
    "колчан":masculine,"силок":masculine,"шлюз":masculine,"люк":masculine,"сундук":masculine,
    "саркофаг":masculine,"ящик":masculine,"мемориал":masculine,
    "головной убор":masculine, "кинжал":masculine, "болт":masculine, "рычаг":masculine,
    
# feminine
    "кирка":feminine, "наковальня":feminine, "булава":feminine,
    "кружка":feminine, "кровать":feminine, "головоломка":feminine,
    "статуя":feminine, "бочка":feminine, "дверь":feminine,
    "мини-кузница":feminine, "шина":feminine,"статуэтка":feminine,
    "кольчуга":feminine,"шапка":feminine,"вагонетка":feminine,"тачка":feminine,
    "труба":feminine,"арфа":feminine,"флейта-пикколо":feminine,
    "корона":feminine,"перчатка":feminine,"Клетка":feminine,"клетка":feminine,
    "стойка":feminine,"решётка":feminine,"туника":feminine,"цепь":feminine,
    "броня":feminine,"обувь":feminine, "крышка":feminine, "звезда":feminine,
    "бирюза":feminine,
   
# neuter
    "тренировочное копьё":neuter, "гнездо":neuter, "ведро":neuter, "копьё":neuter,
    "кольцо":neuter,"Ведро":neuter,
# plural
    "кирки":plural, "тренировочные топоры":plural, "наковальни":plural, "булавы":plural,
    "копья":plural, "кружки":plural,"стулья":plural,
    "боевые топоры":plural, "болты":plural, "боевые молоты":plural,"топоры":plural,
    "арбалеты":plural, "щиты":plural, "рукавицы":plural, "поножи":plural,
    "нагрудники":plural, "брёвна":plural, "тренировочные мечи":plural,
    "цереуса":plural, "ведра":plural, "гробы":plural,"молотки":plural,
    "статуи":plural, "ларцы":plural, "механизмы":plural, "головоломки":plural,
    "игрушечные кораблики":plural, "столы":plural,"кольчужный":plural,
    "ларецы":plural,"тренировочные копья":plural,"флейты-пикколо":plural,
    "игрушечные молотки":plural, "игрушечные топорики":plural,
    "мини-кузницы":plural, "стрелы":plural, "дротики":plural, "баклеры":plural,
    "короткие мечи":plural,"слитки":plural,"шины":plural,"костыли":plural,"бочки":plural,
    "клетки":plural,"ульи":plural,"горшки":plural,"гнёзда":plural,"вёдра":plural,
    "фляги":plural,"бурдюки":plural,"блоки":plural,"барабаны":plural,
    "браслеты":plural,"скипетры":plural,"короны":plural,"статуэтки":plural,"кольца":plural,
    "серьги":plural,"колчаны":plural,"рюкзаки":plural,"мешоки":plural,
    "верёвки":plural,"кольчуги":plural,"шлемы":plural,"одежды":plural,
    "шапки":plural,"капюшоны":plural,"сапоги":plural,"ботинки":plural,"башмаки":plural,
    "рейтузы":plural,"штаны":plural,"амулеты":plural,"кувшины":plural,
    "вагонетки":plural,"тачки":plural,"флейты":plural,"трубы":plural,"арфы":plural,"Поделки":plural,
    "монеты":plural,"Блоки":plural,"Наконечники стрел":plural,"шкафы":plural,"двери":plural,
    "кровати":plural,"жернова":plural,"троны":plural,"стойки":plural,"сундуки":plural,"изделия":plural,
    "перчатки":plural,"брюки":plural,"доспехи":plural,"щиты/баклеры":plural,"плащи":plural,
    "рубахи":plural,"накидки":plural,"робы":plural,"жилеты":plural,"туники":plural,"тоги":plural,
    

# самоцветы
# masculine
    "хрусталь":masculine,"морганит":masculine,"кошачий глаз":masculine,"опал":masculine,
# feminine
    "яшма":feminine, "шпинель":feminine,"тигровая яшма":feminine,
# neuter

# plural
    "шерлы":plural,"прозапалы":plural,"кровавики":plural,"моховые агаты":plural,"хризопразы":plural,"сердолики":plural,
    "изысканные огненные опалы":plural,"костяные опалы":plural,"моховые опалы":plural,
    "молочные кварцы":plural,"цитрины":plural,"пириты":plural,"зелёные турмалины":plural,"белые халцедоны":plural,"лунные камни":plural,"красные пиропы":plural,
    "синие гранаты":plural,"чёрные цирконы":plural,"демантоиды":plural,"биксбиты":plural,"топазы":plural,"кунциты":plural,"фиолетовые спессартины":plural,
    "гелиодоры":plural,"гошениты":plural,"аметисты":plural,"аквамарины":plural,"хризобериллы":plural,"арлекины":plural,
    "изумруды":plural,"александриты":plural, "морионы":plural,"лазуриты":plural,"празеолиты":plural,"лавандовые нефриты":plural,
    "розовые нефриты":plural,"восковые опалы":plural,"янтарные опалы":plural,"золотистые опалы":plural,"ракушечные опалы":plural,
    "авантюрины":plural, "альмандины":plural, "родолиты":plural,"танзаниты":plural,"золотистые бериллы":plural,"топазолиты":plural,
    "светло-жёлтые алмазы":plural,"рубицеллы":plural,"сардониксы":plural,"белые нефриты":plural,"ананасовые опалы":plural,
    "трубчатые опалы":plural, "розовые кварцы":plural,"зелёные цирконы":plural,"зелёные нефриты":plural,"красные цирконы":plural,
    "яшмовые опалы":plural,"розовые турмалины":plural,"огненные опалы":plural,"желейные опалы":plural,
    "коричневые цирконы":plural,"жёлтые цирконы":plural,"жёлтые спессартины":plural,"чистые гранаты":plural,
    "чистые цирконы":plural,"чёрные опалы":plural,"кристаллические опалы":plural,"слоистые огненные опалы":plural,
    "дымчатые кварцы":plural,"смолистые опалы":plural,"светло":plural,"розовые опалы":plural,"розовые перриты":plural,
# masculine
    "кол":masculine,"винт":masculine,"шар":masculine,"диск":masculine,
# neuter
    "лезвие топора":neuter,
# plural
    "колья":plural,"шары":plural,"винты":plural,"диски":plural,"лезвия топоров":plural,

# Травы
    "морошка":feminine,
    
    "червь":masculine,
    "коза":feminine,
}

make_adjective = {
# металл
    'из меди':"медный",
    'из железа':'железный',
    'из серебра':"серебряный",
    'из бронзы':"бронзовый",
    'из стали':"стальной",
    'из золота':"золотой",
    'из никеля':"никелевый",
    'из цинка':"цинковый",
    'из латуни':'латунный',
    'из чугуна':'чугунный',
    'из платины':'платиновый',
    'из электрума':'электрумный',
    'из олова':'оловянный',
    'из свинца':'свинцовый',
    'из алюминия':'алюминиевый',
    'из нейзильбера':'нейзильберовый',
    'из биллона':'билонный',
    'из стерлинга':'стерлинговый',
    'из висмута':'висмутовый',
    'из адамантина':'адамантиновый',
    
# дерево
    'из сосны':'сосновый',
    'из кедра':'кедровый',
    'из дуба':'дубовый',
    'из акации':'акациевый', # не очень благозвучно
    'из клёна':'кленовый',
    'из ивы':'ивовый',
    'из башнегриба':'башнегрибовый',
    'из черношляпника':'черношляпниковый',
    'из нижнешляпника':'нижнешляпниковый',
    'из гоблошляпника':'гоблошляпниковый',
    'из древогриба':'древогрибовый',
    'из кривошипника':'кривошипниковый',
    'из глампронга':'глампронговый',
    'из цереуса':'цереусный',
    'из мангров':'мангровый',
    'из пальмы':'пальмовый',
    'из гевеи':'гевейный',
    'из вышедрева':'вышедревный',
    'из лиственницы':'лиственничный',
    'из каштана':'каштановый',
    'из ольхи':'ольховый',
    'из берёзы':'берёзовый', #
    'из ясеня':'ясеневый',
    'из лумбанга':'лумбанговый',
   
# неорганическое
    'из кремня':'кремневый',
    'из аргиллита':'аргилитовый',
    'из песчаника':'песчаниковый',
    'из алевролита':'алевролитовый',
    'из сланца':'сланцевый',
    'из известняка':'известняковый',
    'из конгломерата':'конгломератный',
    'из доломита':'доломитовый',
    'из мела':'меловый',
    'из гранита':'гранитный',
    'из диорита':'диоритовый',
    'из габбро':'габбровый',
    'из риолита':'риолитовый',
    'из базальта':'базальтовый',
    'из андезита':'андезитовый',
    'из дацита':'дацитовый',
    'из обсидиана':'обсидиановый',
    'из кварцита':'кварцитовый',
    'из филита':'филитовый',
    'из гнейса':'гнейсовый',
    'из мрамора':'мраморный',
    'из каменной глины':'из каменной глины',
    'из каменной соли':'из каменной соли',
    'из грифельного сланца':'из грифельного сланца',
    'из аспидного сланца':'из аспидного сланца',
    
# неорганические камни минералы
    'из красного железняка':'из красного железняка',
    'из бурого железняка':'из бурого железняка',
    'из самородного золота':'из самородного золота',
    'из гарниерита':'гарниеритовый',
    'из самородной меди':'из самородной меди',
    'из малахита':'малахитовый',
    'из галенита':'галенитовый',
    'из сфалерита':'сфалеритовый',
    'из касситерита':'касситеритовый',    
    'из каменного угля':'из каменного угля',
    'из бурого угля':'из бурого угля',
    'из самородной платины':'из самородной платины',
    'из киновари':'киноварный',
    'из кобальтита':'кобальтитовый', 
    'из тетраэдрита':'тетраэдритовый',
    'из рогового серебра':'из рогового серебра',
    'из гипса':'гипсовый',
    'из талька':'тальковый',
    'из гагата':'гагатовый',
    'из пудингового конгломерата':'из пудингового конгломерата', 
    'из окаменелой древесины':'из окаменелой древесины',
    'из графита':'графитовый',   
    'из серы':'серный',
    'из кимберлита':'кимберлитовый',
    'из висмутина':'висмутиновый',
    'из реальгара':'реальгаровый',
    'из аурипигмента':'аурипигментовый',
    'из стибнита':'стибнитовый',
    'из марказита':'марказитовый',   
    'из сильвина':'сильвиновый',
    'из криолита':'криолитовый',
    'из периклаза':'периклазовый',
    'из ильменита':'ильменитовый',
    'из рутила':'рутиловый',
    'из магнетита':'магнетитовый',    
    'из хромита':'хромитовый',
    'из пиролюзита':'пиролюзитовый',
    'из уранинита':'уранинитовый',
    'из боксита':'бокситовый',   
    'из самородного алюминия':'из самородного алюминия',
    'из буры':'буровый',
    'из оливина':'оливиновый',
    'из роговой обманки':'из роговой обманки',
    'из каолинита':'каолинитовый',
    'из серпентина':'серпентиновый',
    'из ортоклаза':'ортоклазовый',
    'из микроклина':'микроклиновый',
    'из слюды':'слюдяной',
    'из кальцита':'кальцитовый',
    'из селитры':'селитровый',
    'из алебастра':'алебастровый',
    'из селенита':'селенитовый',
    'из шелковистого шпата':'из шелковистого шпата', 
    'из ангидрита':'ангедритовый',
    'из алунита':'алунитовый',   
    'из необработанного адамантина':'из необработанного адамантина',
    'из слейда':'слейдовый',
    
# стекло и камни из одного слова
    'хрусталь':"из хрусталя",
    'морион':"из мориона",
    'моховой опал':"из мохового опала",
    'шерл':"из шерла",
    'лазурит':"из лазурита",
    'прозапал':"из прозапала",
    'кровавик':"из кровавика",
    'моховой агат':"из мохового агата",
    'хризопраз':"из хризопраза",
    'сердолик':"из сердолика",
    'вишнёвый опал':"из вишнёвого опала",
    'пейзажная яшма':"из пейзажной яшмы",
    'дымчатый кварц':"из дымчатого кварца",
    'цитрин':"из цитрина",
    'смолистый опал':"из смолистого опала",
    'пирит':"из пирита",
    'чистый турмалин':"из чистого турмалина",
    'серый халцедон':"из серого халцедона",
    'ракушечный опал':"из ракушечного опала",
    'костяной опал':"из костяного опала",
    'бастионный агат':"из бастионного агата",
    'молочный кварц':"из молочного кварца",
    'лунный камень':"из лунного камня",
    'яшмовый опал':"из яшмого опала",
    'ониксовый опал':"из ониксового опала",
    'горный хрусталь':"из горного хрусталя",
    'сардоникс':"из сардоникса",
    'чёрный циркон':"из чёрного циркона",
    'чёрный пироп':"из чёрного пиропа",
    'индиговый турмалин':"из индигового турмалина",
    'синий гранат':"из синего граната",
    'зелёный турмалин':"из зелёного турмалина",
    'демантоид':"из демантоида", 
    'зелёный циркон':"из зелёного циркона",
    'красный циркон':"из красного циркона",
    'красный турмалин':"из красного турмалина",
    'красный пироп':"из красного пиропа",
    'биксбит':"из биксбита",
    'пурпурная шпинель':"из пурпурной шпинели",
    'александрит':"из александрита",
    'морганит':"из морганита",
    'фиолетовый спессартин':"из фиолетового спессартина",
    'кунцит':"из кунцита",  
    'голиодор':"из голиодора",
    'жилейный опал':"из жилейного опала",
    'коричневый циркон':"из коричневого опала",
    'жёлтый циркон':"из жёлтого циркона",
    'жёлтый спессартин':"из жёлтого спессартина",
    'топаз':"из топаза",
    'рубицелл':"из рубицелла",
    'гошенит':"из гошенита",
    'кошачий глаз':"из кошачего глаза",
    'чистый циркон':"из чистого циркона",
    'аметист':"из аметиста",
    'аквамарин':"из аквамарина",
    'красная шпинель':"из красной шпинели",
    'хризоберилл':"из хризоберилла",
    'кристаллический опал':"из кристаллического опала",
    'опал арлекин':"из опала-арлекина",
    'слоистый огненный опал':"из слоистого огненного опала",
    'изумруд':"из изумруда",
    'зеленое стекло':"из зеленого стекла",
    'бесцветное стекло':"из бесцветного стекла",
    'гелиодор':"из гелиодора",
    'желейный опал':"из желейного опала",
    'лавандовый нефрит':"из лавандового нефрита",
    'розовый нефрит':"из розового нефрита",
    'восковой опал':"из воскового опала",
    'янтарный опал':"из янтарного опала",
    'золотистый опал':"из золотистого опала",
    'празеолит':'из празеолита',
    'белый нефрит':"из белого нефрита",
    'ананасовый опал':"из ананасового опала",
    'трубчатый опал':"из трубчатого опала",
    'авантюрин':"из авантюрина",
    'розовый кварц':"из розового кварца",
    'зелёный нефрит':"из зелёного нефрита",
    'альмандин':"из альмандина",
    'розовый турмалин':"из розового турмалина",
    'огненный опал':"из огненного опала",
    'родолит':"из родолита",
    'танзанит':"из танзанита",
    'золотистый берилл':"из огненного опала",
    'топазолит':"из топазолита",
    'чистый гранат':"из чистого граната",
    'чёрный опал':"из чёрного опала",
    'светло-жёлтый алмаз':"из светло-жёлтого алмаза",
    'зелeное стекло':"из зеленого стекла",
    'прозрачное стекло':"из прозрачного стекла",
    'белый халцедон':"из белого халцедона",
#размеры и др
    'большой':"большой",
    'гигантский':"гигантский",
    'заточенный':"заточенный",
    'огромный':"огромный",
    'шипованный':"шипованный",
    'зазубренный':"зазубренный",
    'кольчужный':"кольчужный", 
    'изысканный':"изысканный",
    'большой,':"большой",
    'зазубренный':"зазубренный",
    'грубый':"грубый",

#минералы
    'бриолетовый':"бриолетовый",
    'огранённый розой':"огранённый розой",
    'огранённый подушечкой':"огранённый подушечкой",
    'плоскогранный':"плоскогранный",
    'прямоугольный':"прямоугольный",
    'гладкий':"гладкий",
    'овальный':"овальный",
    'круглый':"круглый",
    'сглаженный':"сглаженный",

#кожа,шёлк
    'из кожи':"кожанный",
    'из шёлка':"шёлковый",

#из трёх слов
    'из висмутовой бронзы':"из висмутовой бронзы",
    'из хорошего пьютера':"из хорошего пьютера",
    'из простого пьютера':"из простого пьютера",
    'из мирского пьютера':"из мирского пьютера",
    'из чёрной бронзы':"из чёрной бронзы",
    'из розового золота':"из розового золота",
    'из ребра цереуса':"из ребра цереуса",
    'из самородного серебра':"из самородного серебра",
    'из мангового дерева':"из мангового дерева",
    'из красного дерева':"из красного дерева",
    
#разные материалы
    'металл':"металлический",
    'пряжа':'из пряжи',
    'кожа':"кожанный",
    'растительное волокно':'из растительного волокна',
    'шёлк':"шёлковый",
    'дерево':"деревянный",
    'кость':"костяной",
}

# временный список, в будущем нужно будет обходиться без него
adjectives = {"горный","густой","Густой","шёлковый","синий","Неотесанный","гигантский","земляной",
    "Заснеженный","Влажный", "яшмовый", "костяной", "Редкий", "восковой", "огненный", "тёмный",
    "гоблинский","эльфийский","дварфийский","людской",
}

adjective_cases = {
    "ый": # медный, шелковый etc.
    (
        ("ый","ая","ое","ые"), # именительный - nominative
        ("ого","ой","ого","ых"), # родительный - genitive
        ("ому","ой","ому","ым"), # дательный - dative
        ("ый","ую","ое","ые"), # винительный  - accusative
        ("ым","ой","ым","ыми"), # творительный  - instrumental
        ("ом","ой","ом","ых"), # предложный  - prepositional
    ),
    "ой": # золотой, густой etc.
    (
        ("ой","ая","ое","ые"), # именительный - nominative
        ("ого","ой","ого","ых"), # родительный - genitive
        ("ому","ой","ому","ым"), # дательный - dative
        ("ого","ую","ое","ых"), # винительный  - accusative
        ("ым","ой","ым","ыми"), # творительный  - instrumental
        ("ом","ой","ом","ых"), # предложный  - prepositional
    ),
    "шой": # большой etc.
    (
        ("шой","шая","шое","шие"), # именительный - nominative
        ("шого","шой","шого","ших"), # родительный - genitive
        ("шому","шой","шому","шим"), # дательный - dative
        ("шого","шую","шое","ших"), # винительный  - accusative
        ("шим","шой","шим","шими"), # творительный  - instrumental
        ("шом","шой","шом","ших"), # предложный  - prepositional
    ),
    "ний": # синий etc.
    (
        ("ний","няя","нее","ние"), # именительный - nominative
        ("него","нюю","нее","них"), # родительный - genitive
        ("нему","ней","нему","ним"), # дательный - dative
        ("него","нюю","нее","них"), # винительный  - accusative
        ("ним","ней","ним","ними"), # творительный  - instrumental
        ("нем","ней","нем","них"), # предложный  - prepositional
    ),
    "кий": # гигантский, высокий etc.
    (
        ("кий","кая","кое","кие"), # именительный - nominative
        ("кого","кой","кого","ких"), # родительный - genitive
        ("кому","кой","кому","ким"), # дательный - dative
        ("кого","кую","кое","ких"), # винительный  - accusative
        ("ким","кой","ким","кими"), # творительный  - instrumental
        ("ком","кой","ком","ких"), # предложный  - prepositional
    ),
    "жий": # рыжий etc.
    (
        ("жий","жая","жее","жие"), # именительный - nominative
        ("жего","жей","жего","жих"), # родительный - genitive
        ("жему","жей","жему","жим"), # дательный - dative
        ("жего","жую","жее","жих"), # винительный  - accusative
        ("жим","жей","жим","жими"), # творительный  - instrumental
        ("жем","жей","жем","жих"), # предложный  - prepositional
    ),
    "чий": # куропаточий etc.
    (
        ("чий","чья","чье","чьи"), # именительный - nominative
        ("чьего","чьей","чьего","чьих"), # родительный - genitive
        ("чьему","чьей","чьему","чьим"), # дательный - dative
        ("чьего","чью","чье","чьих"), # винительный  - accusative
        ("чьим","чьей","чьим","чьими"), # творительный  - instrumental
        ("чьем","чьей","чьем","чьих"), # предложный  - prepositional
    ),
}

accusative_case= {
    'булава':"булаву",
    'кирка':"кирку",
    'кольчуга':"кольчугу",
    'шапка':"шапку",
    'рукавица':"рукавицу",
    'наковальню':"наковальню",
    'игрушку':"игрушку",
    'вагонетка':"вагонетку",
    'тачка':"тачку",
    'флягу':"флягу",
    'одежда':"одежду",
    'рубаха':"рубуху",
    'роба':"робу",
    'варежка':"варежку",
    'бочка':"бочку",
    'доспешная стойка':"доспешную стойку",
    'статуя':"статую",
    'оружейная стойка':"оружейную стойку",
    'Секция трубы':"секцию трубы",
    'перчатка':"перчатку",
    'клетку':"клетку",
    'туника':"тунику",
    'ловушка для':"ловушку для",
    'дверь':"дверь",
    'цепь':"цепь",
    'решетку':"решетку",
    'шину':"шину",
}

incrustation_item= {
    'Инкрустировать Готовые товары с' : "Инкрустировать готовые товары ",
    'Инкрустировать Предметы обстановки с' : "Инкрустировать предметы обстановки ",
    'Инкрустировать Снаряды с' : "Инкрустировать снаряды ",
}

gem_okonch_tv={
    'ный': 'ным','вая': 'вой', 'нка': 'нкой', 'юда': 'юдой',
    'кло': 'клом','ное': 'ным','тра':'трой', 'ень': 'нем',
    'аль': 'алем','тый': 'тым', 'ура': 'урой', 'вый': 'вым',
    'лая': 'лой','ина': 'иной', 'ера': 'ерой', 'арь': 'рью',
    'вое': 'вым','бро': 'бром', 'оль': 'лем', 'рый': 'рым',
    'ото': 'отом', 'нец': 'нцем','ная': 'ной','ний': 'ним',
    'йся': 'мся','лый': 'лым','кий': 'ким','чий': 'чим',
    'ель': 'елью', 'арц': 'арцем', 'юза': 'юзой', 'ной': 'ным',
    'тая': 'той','шма': 'шмой','вой': 'вым','лла': 'ллой',
    'ния': 'нием','ого': 'ым','еди': 'едью','пса': 'псом',
    'ики': 'икой','ора': 'ором',
    }

ending_fem={
    "ва", "ца", "ма", "ия", "на", "ха", "ка", "ба", "да",
    "шь", "чь", "жь"
}

ending_masc={
    "ск", "ой", "ал", "ат", "ик", "ир", "ут"
}

ending_neut={}

ending_plur={"ны", "лы", "ы"}
gem_okonch_vn={
    'ая':'ую', 'ма':'му','ка':'ку','да':'ду','ра':'рой','на':'ну',
    'за':'зу','ла':'лу','ой':'ую','ны':'ну','ди':'дь','ри':'рь',
    'са':'с','ки':'ку',
}

dict_ending_s = {
    'готовая еда':'готовая еда',
    'питьё':'питьё',
    'ведро':'вёдра',
    'верёвка':'верёвки', 
    'шина':'шины',
    'костыль':'костыли',
    'колчан':'колчаны',
    'рюкзак':'рюкзаки',
    'наковальня':'наковальни',
    'доспешная стойка':'доспешные стойки',
    'оружейная стойка':'оружейные стойки',
    'дверь':'двери',
    'шлюз':'шлюзы',
    'кровать':'кровати',
    'трон':'троны',
    'стул':'стулья',
    'гроб':'гробы',
    'статуя':'статуи',
    'дублёная шкура':'дублёные шкуры',
    'большой самоцвет':'большие самоцветы',
    'монета':'монеты',
    'мемориал':'мемориалы', 
    'шкаф':'шкафы',
    'стол':'столы', 
    'оружие':'оружие',
    'сундук':'сундуки',
    'щит':'щиты', #
    'баклер':'баклеры', #
    'мешок':'мешки',
    'ларец':'ларцы',
    'кружка':'кружки',
    'капкан':'капканы',
    'животное':'животные',
    'крышка люка':'крышки люка',
    'решётка':'решётки',
    'ручная мельница':'ручные мельницы',
    'жёрнов':'жернова',
    'окно':'окна',
    'ловушка для животных':'ловушки для животных',
    'цепь':'цепи',
    'клетка':'клетки',
    'контейнер':'контейнеры',
    'ящик':'ящики',
    'бочка':'бочки',
    'часть ловушки':'части ловушек',
    'фляга':'фляги',
    'кубок':'кубки',
    'игрушка':'игрушки',
    'инструмент':'инструменты',
    'музыкальный инструмент':'музыкальные инструменты',
    'статуэтка':'статуэтки',
    'амулет':'амулеты',
    'скипетр':'скипетры',
    'корона':'короны',
    'кольцо':'кольца',
    'серьга':'серьги',
    'браслет':'браслеты',
    'бурдюк':'бурдюки',
    'наконечник стрелы баллисты':'наконечники стрелы баллисты',
    'тотем':'тотемы',
    'труп':'трупы',
    'часть тела':'части тела',
    'конечность/тело гипс':'гипс для конечностей тела',
    'душите':'душит', # strangle - strangles
    'ребро':'рёбра'
}

def get_gender(object):
    if object in gender_item:
        return gender_item[object]
    elif len(object)>=2:
        ending2 = object[-2:]
        ending1 = object[-1:]
        if ending2 in ending_masc:
            return masculine
        elif ending2 in ending_fem:
            return feminine
        elif ending2 in ending_neut:
            return neuter
        elif ending2 in ending_plur or ending1 in ending_plur:
            return plural
    print("get_gender:")
    print("Gender not recognized for '%s'" % object)
    return None

def gender_adjective_2(adjective, gender, case=nominative):
    ending3 = adjective[-3:]
    ending2 = adjective[-2:]
    if ending3 in adjective_cases:
        return adjective[:-3] + adjective_cases[ending3][case][gender]
    elif ending2 in adjective_cases:
        return adjective[:-2] + adjective_cases[ending2][case][gender]
    print("gender_adjective_2:")
    print("Failed to declinate '%s' to the %s case." % (adjective, case_names[case-1]))
    return None

def gender_adjective(adjective,object,case):
    gender = get_gender(object)
    if gender is None:
        return None
    else:
        return gender_adjective_2(adjective,gender,case)

###################### существительные+ прилаг  ######################
endings_to_genetive ={
    'ца':'цы', 'ма':'мы', 'ка':'ки', 'фа':'фы', 'ба':'бы', 'са':'сы',
    'ья':'ьи', 'на':'ны', 'да':'ды', 'ха':'хи', 'ва':'вы', 'за':'зы',
    'га':'ги', 'ра':'ры', 'ла':'лы','ай':'ая', 'ёл':'ла', 'ок':'ка',
    'сь':'ся', 'ль':'ли', 'ец':'ца','ан':'ана','яя':'ей','ня':'ни',
    'вь':'вя', 'нь':'ня', 'ёс':'са', 'дь':'дя', 'рь':'ри','жа':'жа',
    'ий':'ого', 'ый':'ого', 'ви':'ви','ёр':'ра','ие':'их','ек':'ек',
    'шь':'ши','ая':'ой','ли':'ли','ей':'ья','ея':'еи','дя':'дя','еа':'еа',
    'ру':'ру','го':'го','по':'по','ёж':'ежа','ое':'ого','но':'на','ры':'р',
    'во':'ва','со':'са','ст':'ста','ко':'ка','хи':'хов','ые':'ых',
    'цы':'цы','ой':'ой','ки':'ки','ти':'ти','си':'си','ус':'си',
    'та':'та','ед':'ьда','чи':'чи','ри':'ри','па':'па','му':'му','ев':'ьва',
    'зе':'зе','бо':'бо','ёк':'ька','ия':'ии','пи':'пи','ще':'ща','то':'та',
    'адь': 'ади', 'едь': 'едя', 'ось': 'ося', 'ысь':'ыси', 'лёк':'лька',
    'орь': 'ря', 'бей': 'бья', 'тей': 'тея', 'очь':'очь', 'ами':'и',
    'ней': 'ней','овь': 'ови','чая': 'чей','усь':'уся','ана':'ана',
    'ошь': 'ши','рна': 'рен','ика':'ика','чка':'чка',
    'ной': 'ной','чья': 'чьей','вой': 'вого','ень':'еня','ова':'овой',
    'шой': 'шого','аус': 'ауса','дой': 'дого','жая':'жей','ьдь':'ьди',
    'оус': 'оуса','кой': 'кого','лец': 'льца','мей':'мея','пой':'пого',
    'ако': 'ако','лус': 'луса','щая': 'щей','шки':'шков','ель':'еля',
    'хек': 'хека','ижа': 'ижы','лль': 'ля','ота':'оты','бый':'бой',
    'лок': 'локов',
}

iskl={
    'барсук-медоед':'барсука-медоеда',
    'птица-носорог':'птицы-носорог',
    'угорь-конгер':'угря-конгера',
    'макака-резус':'макаки-резус',
    'паук-отшельник':'паука-отшельника',
    'пауканец-отшельник':'пауканца-отшельника',
    'белка-летяга':'белки-летяги',
    'паук-скакун':'паука-скакуна',
    'человек-вомбат':'человеко-вомбата',
    'человек-виргинский':'человеко-виргинского',
    'человек-динго':'человека-динго',
    'человек-ласка':'человека-ласки',
    'гиена':'гиены',
    'ласточка':'ласточки',
    'грибной':'грибного',
    'голова':'головы',
    'луной':'лунного',
    'сова':'совы',
    'ай-ай':'ай-ая',
    'ай-айнец':'ай-айанца',
    'акула-молот':'акулы-молота',
    'скат-хвостокол':'скат-хвостокола',
    'акула-нянька':'акулы-няньки',
    'медведь-губач':'медведя-губача',
    'медведевик-губач':'медведевика-губача',
    'луна-рыба':'луна-рыбы',
    'рыба-меч':'рыбы-меч',
    'белколюд-летяга':'белколюда-летяги',
    'рыба-клоун':'рыбы-клоуна',
    'боция-клоун':'боции-клоуна',
    'рыба-нож':'рыбы-нож',
    'корова':'коровы',
    'сумерками':'сумеречной',
    'камень':'каменных',
    'шпинель':'шпинели'
}

def genitive_case_single_noun(word):
    if word in iskl:
        return iskl[word]
    elif word[-3:] in endings_to_genetive:
        return word[:-3]+endings_to_genetive[word[-3:]]
    elif word[-2:] in endings_to_genetive:
        return word[:-2]+endings_to_genetive[word[-2:]]
    elif word[-1] in {"к","т","н"}:
        return word+"а"

def is_adjective(word):
    if word not in adjectives:
        print("'%s' not recognized as an adjective" % word)
    return word in adjectives

def genitive_case_list(words):
    print("genitive_case_list")
    print(words)
    new_list = []
    gender = get_gender(words[-1])
    if gender is None:
        print("Assuming gender of '%s' is masculine" % words[-1])
        gender = masculine
    for word_temp in words:
        if is_adjective(word_temp):
            print(word_temp,"is adj")
            word_temp=gender_adjective_2(word_temp,gender,genitive)
        else:
            print(word_temp,"isn't adj")
            word_temp=genitive_case_single_noun(word_temp)
        new_list.append(word_temp)
    return new_list

def genitive_case(word):
    return ' '.join(genitive_case_list(word.split()))

#############################################################################
# words={"трупs", "часть телаs",}

animals_female={"собака","самка","крольчиха","гусыня","утка","кошка","ослица","кобыла","корова","овца","свинья",
                    "коза","курица","свинка","буйволица","важенка","лама","альпака","цесарка","пава","индейка",}

body_parts={"панцирь", "скелет", "искалеченный труп","останки","кость","кожа","шёлк","волокна","шерсть","мех"," хвост"}
#выражения типа (из меди кирки [3])
re_1 = re.compile(r"(^[(+*-«☼]*?)(р?)(из\s\w+)\s(\w+\/?\s?\-?\w+?\b)")
def corr_item_1(s):
    print(1)
    symbol=""
    hst=re_1.search(s)
    s_temp=hst.group(2)+hst.group(3)+" "+hst.group(4)
    if s_temp[0]=="р" and s_temp[-1]=="р":
        s_temp=s_temp[1:-1]
        symbol="≡"
    words=s_temp.split(" ")
    new_word=' '.join(words[2:])
    # gender = masculine # по-умолчанию мужской род - включить в окончательной версии
    if new_word in phrases:
        new_word=phrases[new_word]
        s_temp=s_temp.replace(words[-1], new_word)
    
    if new_word in gender_item:
        gender=gender_item[new_word]
    elif new_word=="индив выбор": # вынести в gender_item ?
        gender=neuter
    elif " " in new_word:
        new_words=new_word.split(" ")
        if new_words[1] in gender_item:
            gender=gender_item[new_words[1]]
        elif new_words[0] in gender_item:
            gender=gender_item[new_words[0]]
    
    of_mat = hst.group(3)
    
    if hst.group(3) in make_adjective:
        if type(make_adjective[of_mat]) is tuple:
            print("make_adjective['%s'] is tuple" % of_mat)
            material = make_adjective[of_mat][gender]
        else:
            material=gender_adjective_2(make_adjective[of_mat],gender)
        s_temp=material+" "+new_word
    else:
        s_temp=new_word+" "+hst.group(3)
    
    if symbol:
        s_temp=symbol+s_temp+symbol
    s=s.replace(hst.group(2)+hst.group(3)+" "+hst.group(4),s_temp )
    # s=s.replace("кольчужный","кольчужные")

    return s
    
#выражения типа "(из висмутовой бронзы кирка [3])"
re_2 = re.compile(r"\(?((из\s\w+\s\w+)\s(\w+\/?\s?\-?\w+?\b))")
def corr_item_2(s):
    print(2)
    hst=re_2.search(s)
    print(hst.group(1))
    print(hst.group(2))
    print(hst.group(3))
    
    object=hst.group(3)
    if " " in object:
        words = object.split()
        object = words[-1]
        gender = get_gender(words[-1])
        adjs = []
        for adj in words[:-1]:
            new_adj = gender_adjective_2(adj,gender)
            if new_adj is None:
                new_adj = adj
            adjs.append(new_adj)
        
        first_part = "%s %s" % (" ".join(adjs),object)
    else:
        first_part = object
    
    s=s.replace(hst.group(1),first_part+" "+hst.group(2))
    return s
 
#выражения типа "рогатый филин яйцо"
def corr_item_3(s):
    print(3)
    hst=re_3.search(s)
    if re_3_1.search(s):
        print(3.1)
        hst=re_3_1.search(s)
        s=hst.group(1)+" "+genitive_case(hst.group(3)+" "+hst.group(2))
        return s.capitalize()
    if hst.group(3) in phrases:
        print(3.2)
        new_word=phrases[hst.group(3)]
    else:
        print(3.3)
        new_word=hst.group(3)
    if hst.group(2) in make_adjective:
        print(3.4)
        s=s.replace(hst.group(0),hst.group(1)+new_word+" "+make_adjective[hst.group(2)])
    else:
        print(3.5)
        s=s.replace(hst.group(0),hst.group(1)+new_word+" "+genitive_case(hst.group(2)))
    print(3.0)
    return s 
    
#выражения типа "приготовленные(рубленная) гигантский крот лёгкие"
re_4 = re.compile("(приготовленные|рубленная)\s(.+)\s(\w+)")
def corr_item_4(s):
    print(4)
    hst=re_4.search(s)
    s=s.replace(hst.group(0),hst.group(1)+" "+hst.group(3)+" "+genitive_case(hst.group(2)))
    return s
 
#выражения типа "горный козёл из кожи"
def corr_item_skin(s):
    print(5)
    hst = re_skin.search(s)
    s = s.replace(hst.group(0), hst.group(1)+"кожа "+genitive_case(hst.group(2)))
    return s 
    
#выражения типа "свинохвост из волокон (ткань+шёлк+шерсть)"
re_6 = re.compile(r'^([x\(+*-«☼]*)(.+)\s(из волокон|из шёлка|из шерсти|из кожи|из копыт|из кости|из рогов|из бивней|из панциря|из зубов)\s(\w+\s?\w+?\b)')
def corr_item_6(s):
    print(6)
    hst=re_6.search(s)
    new_word=hst.group(4)
    s=s.replace(hst.group(0), hst.group(1)+hst.group(4)+" "+hst.group(3)+" "+genitive_case(hst.group(2)))
    s = s.replace("левый", "левая")
    s = s.replace("правый", "правая")
    return s  
    
#выражения типа "древесина дуба брёвна"
re_7 = re.compile(r'(древесина)\s(\w+)\s(брёвна)')
def corr_item_7(s):
    print(7)
    hst=re_7.search(s)
    of_wood = "из "+hst.group(2)
    if of_wood in make_adjective:
        adj=gender_adjective_2(make_adjective[of_wood],plural)
        s = s.replace(hst.group(0), adj+" "+hst.group(3)) # берёзовые брёвна
    else:
        s = s.replace(hst.group(0), hst.group(1)+" "+hst.group(2)) # древесина акации
    return s  
    
#выражения типа "(бриолетовый восковые опалы)"
re_gem_cutting = re.compile(r'((бриолетовый|большой|огранённый|огранённый|грубый)\s[\w\s-]+)')
def corr_item_8(s):
    print(8)
    hst=re_gem_cutting.search(s)
    words = hst.group(1).split()
    if words[-1] in body_parts:
        print(8.1)
        return corr_item_body_parts(s)
    
    print(words)
    gender = get_gender(words[-1])
    print("gender:",gender)
    
    new_list = []
    for word in words[:-1]:
        if word in make_adjective:
            adj = make_adjective[word]
            word = gender_adjective_2(adj,gender)
        new_list.append(word)
        
    new_list.append(words[-1])
    
    return s.replace(hst.group(0)," ".join(new_list))
    
#выражения типа "гигантский из ясеня лезвия топоров"
re_9 = re.compile(r'(шипованный|огромный|большой|заточенный|гигантский|большой, зазубренный)\s(из\s[\w\s]+\b)')
def corr_item_9(s):
    print(9)
    hst=re_9.search(s)
    adj = hst.group(1)
    words = hst.group(2).split()
    if " ".join(words[:2]) in make_adjective:
        print(9.1)
        material = " ".join(words[:2])
        print("material:",material)
        object = " ".join(words[2:])
        print("object:",object)
        gender = gender_item[object]
        print("object gender:",gender)
        if adj not in make_adjective and " " in adj:
            adj_words = adj.split()
            new_words = [gender_adjective_2(make_adjective[word],gender) for word in adj_words]
            new_adj = " ".join(new_words)
        else:
            new_adj = gender_adjective_2(make_adjective[adj],gender)
        print(adj,":",new_adj)
        new_word_2 = gender_adjective_2(make_adjective[material],gender)
        print(material,":",new_word_2)
        s=s.replace(hst.group(0),"%s %s %s" % (new_adj,new_word_2,object))
    else:
        print(9.2)
        material = " ".join(words[:3])
        print("material:",material)
        object = " ".join(words[3:])
        print("object:",object)
        gender = gender_item[object]
        if adj not in make_adjective and " " in adj:
            adj_words = ajd.split()
            new_words = [gender_adjective_2(make_adjective[word],gender) for word in adj_words]
            new_adj = " ".join(new_words)
        else:
            new_adj = gender_adjective_2(make_adjective[adj],gender)
        print(adj,":",new_adj)
        s=s.replace(hst.group(0),"%s %s %s" % (new_adj,object,material))
    return s

#"животные"
def corr_item_10(s):
    print(10)
    s=s.replace("сырой","сырая")
    if any(s.find(item)!=-1 for item in animals_female):
        s=s.replace("(Ручной)","(Ручная)")
        s=s.replace("боевой","боевая")
        s=s.replace("Ничей","Ничья")
        s=s.replace("охотничий","охотничья")
        
    return s

#выражения типа "(дварфийское пиво бочка (из ольхи))"
def corr_item_11(s):
    print(11)
    hst=re_container.search(s)
    if hst.group(3) in make_adjective:
        s=s.replace(hst.group(1)+" "+hst.group(2),hst.group(2)+" "+genitive_case(hst.group(1)))
    else:
        hst_1=re_12_1.search(hst.group(3))
        genitive_case_group1 = genitive_case(hst_1.group(1))
        new_word=hst_1.group(2)+" "+genitive_case_group1
        s=s.replace(hst.group(1)+" "+hst.group(2),hst.group(2)+" "+genitive_case_group1)
        s=s.replace(hst.group(3),new_word)
    return s.capitalize()

# Элементы рельефа, крепости и т.п.
re_13 = re.compile(r'(.+)\s(Подъем|Стена|Кластер|валун|склон|Пол Пещеры|лестница вверх/вниз|пол пещеры|Лестница Вверх|Лестница Вниз|галька|деревце|лестница вверх|лестница вниз|подъем|пол)\b')
#    (прилагательное) (первое дополнение) (второе дополнение) =>
# => (прилагательное) (второе дополнение) из (первое дополнение)
def corr_item_12(s):
    print(12)
    hst=re_13.search(s)
    group1 = hst.group(1)
    object = hst.group(2)
    if object=="деревце":
        if group1.split(" ")[0]=="Мёртвый":
            s="Мёртвое деревце ("+''.join(hst.group(0).split(" ")[1:-1])+")"
        else:
            s="Деревце ("+group1+")"
        return s.capitalize()
    
    if " " in group1:
        print(12.1)
        words = group1.split(" ")
        first_word = words[0]
        first_words = []
        gender = get_gender(object)
        for word in words:
            if word in {"Заснеженный","Неотесанный","Влажный"}:
                if gender is not None:
                    new_word = gender_adjective_2(word, gender)
                    if not new_word:
                        new_word = word
                else:
                    new_word = word
                first_words.append(new_word)
            else:
                break
        
        words = words[len(first_words):]
        
        if words[0] == "из":
            words = words[1:]
        else:
            words = genitive_case_list(words)
            
        if not first_words:
            print("12.1.1")
            s = "%s из %s" % (object, " ".join(words))
        else:
            print("12.1.2")
            s = "%s %s из %s" % (" ".join(first_words), object, " ".join(words))
    else:
        print(12.2)
        first_word = group1
        new_first_word=gender_adjective(first_word,group1,genitive)
        
        if new_first_word:
            first_word = new_first_word
        s = "%s из %s" % (object, genitive_case(first_word))
    
    if "иза" in s:
        s=s.replace(" иза", "")
    return s.capitalize()

#"Густой и тп"
def corr_item_13(s):
    print(13)
    hst=re_13_1.search(s)
    adjective = hst.group(1)
    object = hst.group(2)
    
    if " " in object:
        print(13.1)
        words = object.split(" ")
        if is_adjective(words[0]):
            print("13.1.1")
            gender = get_gender(words[-1])
            new_word=gender_adjective_2(words[0], gender, nominative)
            s=s.replace(words[0],new_word)
            new_word=gender_adjective_2(adjective, gender, nominative)
            s=s.replace(adjective,new_word)
    else:
        print(13.2)
        new_word = gender_adjective(adjective, object, nominative)
        if new_word:
            print("13.2.1")
            s=new_word+" "+object
        
    return s.capitalize()

#"Скелет, останки и тп"
re_body_parts = re.compile(r'^[{]?(\w+\s?\w+?|)\s(панцирь|скелет|труп|останки|кость|кожа|шёлк|волокна|шерсть|мех|хвост|труп|голень)\}?\b')
def corr_item_body_parts(s):
    print(14)
    hst=re_body_parts.search(s)
    words = hst.group(1).split()
    if words[-1] in {"частичный","искалеченный"}:
        s="%s %s %s" % (words[-1], hst.group(2), " ".join(genitive_case_list(words[:-1])))
    else:
        s=s.replace(hst.group(1)+" "+hst.group(2), hst.group(2)+" "+" ".join(genitive_case_list(words)))
    return s.capitalize()
    
#"Изделия из стекла"
def corr_item_15(s):
    print(15)
    hst=re_14.search(s)
    s=hst.group(1)+" "+hst.group(3)+" "+make_adjective[hst.group(2)]
    return s.capitalize()
    
#кузница
def corr_item_16(s):
    print(16)
    hst=re_15.search(s)
    hst_1=re_15_1.search(s)
    if hst.group(3) in accusative_case:
        item=accusative_case[hst.group(3)]
        material_temp=make_adjective[hst.group(2)][0]
        material=material_temp[:-2]+"ую"
        s=hst.group(1)+" "+material+" "+item
        s=s.replace("Кузница","Ковать")
        s=s.replace("Наконечники стрел","наконечники стрел баллисты")
        return s.capitalize()
    if hst.group(2) in make_adjective:
        gender=gender_item[hst.group(3)]
        material=make_adjective[hst.group(2)][gender]
        s=hst.group(1)+" "+material+" "+hst.group(3)
    elif hst_1.group(2) in make_adjective:
        item=hst_1.group(3)
        if item in accusative_case:
            item=accusative_case[item]
        s=hst_1.group(1)+" "+item+" "+hst_1.group(2)
    s=s.replace("Кузница","Ковать")
    s=s.replace("Наконечники стрел","наконечники стрел баллисты")
    return s.capitalize()

def instrumental_case(word):
    gender = get_gender(word)
    if gender == masculine:
        return word + "ом"
    elif gender == feminine:
        return word + "ой"

#Ювелирная мастерская
def corr_item_17(s):
    print(17)
    hst = re_16.search(s)
    gem = ""
    if hst.group(1) == "Огранить":
        for word in hst.group(2).split(" "):
            if word[-2:] in gem_okonch_vn:
                word=word[:-2]+gem_okonch_vn[word[-2:]]
            if word=="из":
                word = ""
            gem=(gem+" "+word).strip()
        s=hst.group(1)+" "+gem
        return s.capitalize()

    for word in hst.group(2).split(" "):
        if word[-3:] in gem_okonch_tv:
            word=word[:-3]+gem_okonch_tv[word[-3:]]
        else:
            word = word + "ом"
        if word=="изом":
            word = ""
        gem = (gem+" "+word).strip()
    s=incrustation_item[hst.group(1)]+gem
    return s.capitalize()
    
# трупs
def corr_item_18(s):
    print(18)
    hst=re_corpses.search(s)
    s_temp=phrases[hst.group(1)]
    s=s.replace(hst.group(1), s_temp)
    return s.capitalize()   

gender_item["лесное убежище"]=neuter
gender_item["крепость"]=feminine
gender_item["селение"]=neuter
gender_item["горный город"]=masculine
gender_item["городок"]=masculine
gender_item["гробница"]=feminine

# убежище, крепость
def corr_settlement(s):
    print("corr_settlement")
    hst=re_settlement.search(s)
    adjective = hst.group(1).strip()
    settlement = hst.group(2)
    name = hst.group(3)
    
    if len(adjective)==0:
        return "%s %s" % (settlement.capitalize(), name.capitalize())
        
    gender = gender_item[settlement]
    if " " not in adjective:
        adjective_2 = gender_adjective_2(adjective,gender)
    else:
        adjective_2 = " ".join(gender_adjective_2(word,gender) for word in adjective.split(" "))
    
    if adjective_2 is None:
        adjective_2 = adjective
    
    return "%s %s %s" % (adjective_2.capitalize(), settlement, name.capitalize())
   
# выбор материала
def corr_item_20(s):
    print(20)
    hst=re_19.search(s)
    if hst.group(2) in phrases:
        new_word=phrases[hst.group(2)]
    else:
        new_word=hst.group(2)
    if hst.group(1)=='пряжа' or hst.group(1)=='растительное волокно':
        material=make_adjective[hst.group(1)]
        s=new_word+" "+material
        return s.capitalize()
    gender=gender_item[new_word]
    material=make_adjective[hst.group(1)][gender]
    s=material+" "+new_word
    return s.capitalize() 

#кожа, шерсть-длинные названия
def corr_item_21(s):
    print(21)
    hst=re_20.search(s)
    s=hst.group(2)+" "+genitive_case(hst.group(1))
    return s

def corr_stopped_construction(s):
    print("corr_stopped_construction")
    hst=re_stopped_construction.search(s)
    return ("Дварфы приостановили строительство %s." % genitive_case(hst.group(1))).capitalize()

# Корректировка для окончания s - перевод существительного во множественное число или глагола в 3-е лицо ед.ч.
re_ending_s = re.compile(r'([а-яёА-ЯЁ][а-яёА-ЯЁ\s]*s\b)')
def corr_ending_s(s):
    print("corr_ending_s")
    hst=re_ending_s.search(s)
    group1=hst.group(1)
    if group1[:-1] in dict_ending_s:
        s=s.replace(group1,dict_ending_s[group1[:-1]])
    else:
        words = group1.split()
        if words[-1][:-1] in dict_ending_s:
            s=s.replace(words[-1],dict_ending_s[words[-1][:-1]])
        else:
            print("Couldn't find correct -s form for %s." % words[-1][:-1])
            return None
    return s

# Clothier's shop

re_clothiers_shop = re.compile(r'(Делать|Изготовить) (ткань|шёлк|пряжа) (\w+)')

cloth_subst = {
    "ткань":("Шить","из ткани"),
    "шёлк":("Шить","шёлковый"),
    "пряжа":("Вязать","из пряжи")
}

accusative_case["носок"]="носок"
accusative_case["штаны"]="штаны"
accusative_case["верёвка"]="верёвку"
accusative_case["капюшон"]="капюшон"
accusative_case["башмак"]="башмак"
accusative_case["мундир"]="мундир"
accusative_case["плащ"]="плащ"
accusative_case["мешок"]="мешок"
accusative_case["жилет"]="жилет"
accusative_case["рубаха"]="рубаху"

def corr_clothiers_shop(s):
    print("Corr clothier's shop")
    hst = re_clothiers_shop.search(s)
    material = hst.group(2)
    product = hst.group(3)
    verb, of_material = cloth_subst[material]
    if product == "верёвка":
        verb = "Вить"
    product_accus = accusative_case[product]
    if material == "шёлк":
        material_adj = gender_adjective("шёлковый",product,accusative)
        return ' '.join([verb,material_adj,product_accus])
    else:
        return ' '.join([verb,product_accus,of_material])

re_werebeast = re.compile(r"были(\w+)")
def corr_werebeast(s):
    hst = re_werebeast.search(s)
    return s.replace(hst.group(0),hst.group(1)+"-оборотень")

# re_become = re.compile(r"(.+)\s(вырос и стал|стал)\s(.+)\.")
re_become = re.compile(r"(.+)\s(стал)\s(.+)\.")
def corr_become(s):
    print("corr_become")
    hst = re_become.search(s)
    words = hst.group(3).split()
    words[0] = instrumental_case(words[0])
    return "%s %s %s." % (hst.group(1), hst.group(2), " ".join(words))

re_with_his = re.compile(r'(.*) с (его|её)(.*)')
def corr_with_his(s):
    print("corr_with_his")
    hst = re_with_his.search(s)
    # return "%s своим%s" % (hst.group(1), instrumental_case(hst.group(3)))
    return "%s своим%s" % (hst.group(1), hst.group(3)) # пока хотя бы так

re_crafts = re.compile(r"([\w\s]+) (кольцо|кольца)")
def corr_crafts(s):
    print("corr_crafts")
    hst = re_crafts.search(s)
    object = hst.group(2)
    description = hst.group(1)
    return s.replace(hst.group(0), "%s из %s" % (object,genitive_case(description)))

############################################################################
#компилированные регулярные выражения
re_3 = re.compile(r'(\(?)(.+)\s(\bяйцо|требуха|железы|железа|мясо|кровь|сукровица|кольцоs|серьгаs|амулетs|браслетs|скипетрs|коронаs|статуэткаs\b)')
re_3_1 = re.compile(r"(\bЛужа|Брызги|Пятно)\s(.+)\s(кровь\b)")
re_skin = re.compile(r'(\(?)(.+)\s(из кожи)')
re_11 = re.compile(r'(Ничей|охотничий|сырой)(.+)((Ручной)|\♀)')
re_container = re.compile(r'\((.+)\s(бочка|мешок)\s\((.+)\)(.+)?\)')
re_12_1 = re.compile(r'(.+)\s(из волокон|из шёлка|из шерсти|из кожи)')
re_13_1=re.compile(r'\b(Густой|Редкий|Заснеженный)\s(.+)')
re_14=re.compile(r'\b(Делать|Изготовить|Делать\s?\w+?)\s(зелёное стекло|прозрачное стекло|хрусталь)\s(\w+)')
re_15 = re.compile(r"(^Ковать|^Делать|^Чеканить|^Изготовить)\s(из\s\w+)\s(\w+\s?\w+?\b)")
re_15_1 = re.compile(r"(^Ковать|^Делать|^Чеканить|^Изготовить)\s(из\s\w+\s\w+)\s(\w+\s?\w+?\b)")
re_16 = re.compile(r"(^Инкрустировать Готовые товары с|^Инкрустировать Предметы обстановки с|^Инкрустировать Снаряды с|^Огранить)\s(.+)")
re_corpses = re.compile(r'(трупs)\s(.+)')
re_settlement = re.compile(r'(.*)\s(лесное убежище|крепость|селение|горный город|городок|гробница)\s(.+)')
# re_19 = re.compile(r'(металл|кожа|пряжа|растительное волокно|дерево|шёлк)\s(.+)')
re_20 = re.compile(r'(.+)\s(кожа|кость|волокно|шёлк)\b')
re_stopped_construction = re.compile(r' дварфы приостановили строительство (\w+).')

verbs = {
    "промахивается","контракует","punches","атакует","нападает","хватает","повален","выпускает",
    "сталкивается","выглядит","kicks","встаёт","bites","держится","трясёт","позволяет","блокирует",
    "душит", "пропускает", "истёк",
    "помещает", # помещатет удушающий захват - заменить на что-то другое
}

############################################################################
def Init():
    # phrases['Test'] = 'Test'
    pass
Init()

debug = True
if debug:
    log_file = open('changetext.log', 'a', 1, encoding='cp65001')
else:
    log_file = None

logged = set()

def ChangeText(s):
    def ChangeText_internal(s):
        result = None
        # prepocessing:
        if s in phrases:
            result = phrases[s]
        
        while re_ending_s.search(s): # убрать из trans.txt 686284|s|ы|
            s1 = corr_ending_s(s)
            if s1 is None:
                break
            s = s1
            result = s
        
        if re_werebeast.search(s):
            s = corr_werebeast(s)
            result = s
        if re_with_his.search(s):
            s = corr_with_his(s)
            result = s
        
        if re_1.search(s):
            if re_1.search(s).group(0) in make_adjective:
                result = re_1.search(s).group(0)
            elif re_1.search(s).group(3) in make_adjective:
                result = corr_item_1(s)
            elif re_2.search(s).group(2) in make_adjective:
                result = corr_item_2(s)
        elif re_6.search(s):
            result = corr_item_6(s)
        elif re_4.search(s):
            result = corr_item_4(s)
        elif re_skin.search(s):
            result = corr_item_skin(s)
        elif re_3.search(s):
            result = corr_item_3(s)
        elif re_7.search(s):
            result = corr_item_7(s)
        elif re_9.search(s):
            result = corr_item_9(s) 
        elif re_gem_cutting.search(s):
            result = corr_item_8(s)
        elif re_11.search(s):
            result = corr_item_10(s)
        elif re_container.search(s):
            result = corr_item_11(s)
        elif re_stopped_construction.search(s):
            result = corr_stopped_construction(s)
        elif re_13.search(s):
            result = corr_item_12(s)
        elif re_13_1.search(s):
            result = corr_item_13(s)
        elif re_14.search(s):
            result = corr_item_15(s)
        elif re_15.search(s):
            result = corr_item_16(s)
        elif re_16.search(s):
            result = corr_item_17(s)
        elif re_corpses.search(s):
            result = corr_item_18(s)
        elif re_settlement.search(s):
            result = corr_settlement(s)
        # elif re_19.search(s): # Отключено: дает ложные срабатывания в логе
            # result = corr_item_20(s) 
        elif re_clothiers_shop.search(s):
            result = corr_clothiers_shop(s)
        elif re_body_parts.search(s):
            result = corr_item_body_parts(s)
        elif re_20.search(s):
            result = corr_item_21(s)
        elif re_become.search(s):
            result = corr_become(s)
        elif re_crafts.search(s):
            result = corr_crafts(s)
        
        return result
    
    try:
        output = ChangeText_internal(s)
    except Exception:
        print('An error occured.', file=sys.stderr)
        print('Initial string:', '"'+s+'"', file=sys.stderr)
        print(traceback.format_exc(), file=sys.stderr)
        print("", file=sys.stderr)
        output = None
    
    if debug and s not in logged:
        print('"%s" ---------> "%s"' % (s,output), file=log_file)
        log_file.flush()
        logged.add(s)
    
    return output
    
if __name__ == '__main__':
    # ChangeText("риз алевролита мемориалр")
    if test_strings:
        for key in test_strings:
            result = ChangeText(key)
            try:
                assert(result==test_strings[key])
            except AssertionError:
                print("A test failed.")
                print("Given '%s'" % key)
                print("Expected '%s'" % test_strings[key])
                print("Got '%s'" % result)
                raise
    input()
else: # if runned not as a script
    if debug:
        sys.stdout = log_file # redirect standard output to the log file
